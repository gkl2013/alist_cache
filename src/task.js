import t from"node-cron";import{createClient as o}from"webdav";import{Level as e}from"level";const a=new e("./database"),n="SCANNING_IS_DOING",r=async(t,o)=>{console.log("=======insert",t),await a.put(t,JSON.stringify(o))},s=async t=>{try{return await a.del(t)}catch(t){return void console.log("=======",t)}},c=async t=>{await a.put(n,String(t))},i=(t=500)=>new Promise((o=>setTimeout((()=>o(!0)),t)));var l={protocol:"http",host:"101.35.113.109",port:5244,username:"emby",password:"emby"};let w=null;const f=async()=>{if(w)return w;const{protocol:t,port:e,host:a,username:n,password:r}=await(console.log("=======config",l,"object"),new Promise((t=>t(l))));return w=o(`${t}://${a}:${e}/dav`,{username:n,password:r}),w},m=async(t,o=!0)=>{try{const e=await f(),n=await e.getDirectoryContents(t,{includeSelf:!0});if(!o)return void await r(t,n);const c=await(async t=>{try{const o=await a.get(t);return o?JSON.parse(o):[]}catch(t){return console.log("=======err",t),[]}})(t)||[];await r(t,n);const l=new Map,w=[];for(const t of c)l.set(t.filename,t);for(const o of n)if(t!==o.filename){const t=l.get(o.filename);t&&t.lastmod===o.lastmod?l.delete(o.filename):w.push(o)}for(const t of w)await i(1500),await m(t.filename,"directory"===t.type);for(const t of[...l.values()])await s(t.filename)}catch(t){return void console.error("获取目录内容或转换为XML时出错：",t)}},u=async(t,o=!0)=>{await(async()=>{try{const t=await a.get(n);return!!t&&t===String(!0)}catch(t){return[]}})()?console.log("===已有扫描正在处理中===="):(await c(!0),await m(t,!0),await c(!1),console.log("===扫描完成===="))},p=()=>{t.schedule("*/10 * * * *",(()=>{console.log("===定时任务启动===="),u("/",!0)}))};export{p as timeSchedule};
