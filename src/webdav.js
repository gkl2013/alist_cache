import{Level as t}from"level";import e from"fs";import*as o from"path";import{fileURLToPath as n}from"url";const r=new t("./database");let s=null;function a(){let t=o.dirname(n(import.meta.url));for(;!e.existsSync(o.join(t,"package.json"));)t=o.dirname(t);return t}a();const p=()=>{const t=o.join(a(),"alist.json");return new Promise((o=>{if(s)return o(s);e.readFile(t,"utf8",((t,e)=>{if(t)console.error("读取配置文件失败：",t);else try{const t=JSON.parse(e);return console.log("读取到的配置内容：",t),s=t,o(t)}catch(t){console.error("解析配置文件内容出错：",t)}}))}))},c=async t=>{const e=await(async t=>{try{const e=await r.get(t);return e?JSON.parse(e):[]}catch(t){return console.log("=======err",t),[]}})(t);return l(e)},l=(t=[])=>{let e='<?xml version="1.0" encoding="UTF-8"?><D:multistatus xmlns:D="DAV:">';return t.forEach((t=>{e+="<D:response>",e+=`<D:href>/dav/${t.filename.replace("/","")}</D:href>`,e+="<D:propstat><D:prop>",e+=`<D:displayname>${t.basename}</D:displayname> `,e+=`<D:getlastmodified>${t.lastmod}</D:getlastmodified> `,e+=`<D:getcontentlength>${t.size}</D:getcontentlength>`,e+=`<D:resourcetype>${"directory"===t.type?'<D:collection xmlns:d="DAV:" />':""}</D:resourcetype>`,t.mime&&(e+=`<D:getcontenttype>${t.mime}</D:getcontenttype>`),t.etag&&(e+=`<D:getetag>${t.etag?`"${t.etag}"`:""}</D:getetag>`),e+="</D:prop><D:status>HTTP/1.1 200 OK</D:status></D:propstat>","directory"===t.type&&(e+="<D:propstat> <D:prop> <D:getcontentlength></D:getcontentlength> <D:getetag></D:getetag> <D:getcontenttype></D:getcontenttype> </D:prop> <D:status>HTTP/1.1 404 Not Found</D:status> </D:propstat>"),e+="</D:response>"})),e+="</D:multistatus>",e},i=async(t,e)=>{const o=decodeURIComponent("/dav"===t.url?"/":t.url.replace("/dav",""));console.log("=======path",o),o||e.send("参数错误");if(delete t.headers.host,"GET"===t.method){const{protocol:t,port:n,host:r,username:s,password:a}=await p(),c=`${t}://${s}:${a}@${r}:${n}/dav${encodeURIComponent(o)}`;e.redirect(c)}if("PROPFIND"===t.method){const t=await c(o);t?(e.set("Content-Type","application/xml"),e.status(207).send(t)):e.send("参数错误")}};export{l as convertToXML,i as webdavHandler};
