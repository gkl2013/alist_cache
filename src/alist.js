import{createClient as t}from"webdav";import{Level as o}from"level";import e from"fs";import*as r from"path";import{fileURLToPath as a}from"url";const n=new o("./database"),s="SCANNING_IS_DOING",i=async(t,o)=>{console.log("=======insert",t),await n.put(t,JSON.stringify(o))},c=async t=>{try{return await n.del(t)}catch(t){return void console.log("=======",t)}},l=async t=>{await n.put(s,String(t))},f=(t=500)=>new Promise((o=>setTimeout((()=>o(!0)),t)));let u=null;function m(){let t=r.dirname(a(import.meta.url));for(;!e.existsSync(r.join(t,"package.json"));)t=r.dirname(t);return t}m();const w=()=>{const t=r.join(m(),"alist.json");return new Promise((o=>{if(u)return o(u);e.readFile(t,"utf8",((t,e)=>{if(t)console.error("读取配置文件失败：",t);else try{const t=JSON.parse(e);return console.log("读取到的配置内容：",t),u=t,o(t)}catch(t){console.error("解析配置文件内容出错：",t)}}))}))};let p=null;const d=async(o,e=!0)=>{try{const r=await(async()=>{if(p)return p;const{protocol:o,port:e,host:r,username:a,password:n}=await w();return p=t(`${o}://${r}:${e}/dav`,{username:a,password:n}),p})(),a=await r.getDirectoryContents(o,{includeSelf:!0});if(!a||0===a.length)return;if(!e)return void await i(o,a);const s=await(async t=>{try{const o=await n.get(t);return o?JSON.parse(o):[]}catch(t){return console.log("=======err",t),[]}})(o)||[];await i(o,a);const l=new Map,u=[];for(const t of s)l.set(t.filename,t);for(const t of a)if(o!==t.filename){const o=l.get(t.filename);o&&o.lastmod===t.lastmod||u.push(t)}for(const t of u)await f(1500),await d(t.filename,"directory"===t.type);for(const[t]of l){a.find((t=>t.filename))&&l.delete(t)}for(const t of[...l.values()])await c(t.filename)}catch(t){return void console.error("获取目录内容或转换为XML时出错：",t)}},y=async(t,o=!0)=>{await(async()=>{try{const t=await n.get(s);return!!t&&t===String(!0)}catch(t){return[]}})()?console.log("===已有扫描正在处理中===="):(await l(!0),await d(t,!0),await l(!1),console.log("===扫描完成===="))},g=async(t,o)=>{const e=t.params[0]||"/";y(e,!0),o.send({code:0})},h=async()=>{await w(),await l(!1),y("/",!0)};export{h as initData,g as scanning,y as scanningHandler};
