import{createClient as t}from"webdav";import{Level as o}from"level";import r from"fs";import*as a from"path";import{fileURLToPath as e}from"url";const n=new o("./database"),s="SCANNING_IS_DOING",i=async(t,o)=>{console.log("=======insert",t),await n.put(t,JSON.stringify(o))},c=async t=>{try{return await n.del(t)}catch(t){return void console.log("=======",t)}},l=async t=>{await n.put(s,String(t))},f=(t=500)=>new Promise((o=>setTimeout((()=>o(!0)),t)));let u=null;function m(){let t=a.dirname(e(import.meta.url));for(;!r.existsSync(a.join(t,"package.json"));)t=a.dirname(t);return t}m();const w=()=>{const t=a.join(m(),"alist.json");return new Promise((o=>{if(u)return o(u);r.readFile(t,"utf8",((t,r)=>{if(t)console.error("读取配置文件失败：",t);else try{const t=JSON.parse(r);return console.log("读取到的配置内容：",t),u=t,o(t)}catch(t){console.error("解析配置文件内容出错：",t)}}))}))};let p=null;const y=async(o,r=!0)=>{try{const a=await(async()=>{if(p)return p;const{protocol:o,port:r,host:a,username:e,password:n}=await w();return p=t(`${o}://${a}:${r}/dav`,{username:e,password:n}),p})(),e=await a.getDirectoryContents(o,{includeSelf:!0});if(!e||0===e.length)return;if(!r)return void await i(o,e);const s=await(async t=>{try{const o=await n.get(t);return o?JSON.parse(o):[]}catch(t){return console.log("=======err",t),[]}})(o)||[];await i(o,e);const l=new Map,u=[];for(const t of s)l.set(t.filename,t);for(const t of e)if(o!==t.filename){const o=l.get(t.filename);o&&o.lastmod===t.lastmod||u.push(t)}for(const t of u)await f(1500),await y(t.filename,"directory"===t.type);for(const[t]of l){e.find((o=>o.filename===t))||await c(t)}}catch(t){return void console.error("获取目录内容或转换为XML时出错：",t)}},d=async(t,o=!0)=>{await(async()=>{try{const t=await n.get(s);return!!t&&t===String(!0)}catch(t){return[]}})()?console.log("===已有扫描正在处理中===="):(await l(!0),await y(t,!0),await l(!1),console.log("===扫描完成===="))},g=async(t,o)=>{const r=t.params[0]||"/";d(r,!0),o.send({code:0})},h=async()=>{await w(),await l(!1),d("/",!0)};export{h as initData,g as scanning,d as scanningHandler};
